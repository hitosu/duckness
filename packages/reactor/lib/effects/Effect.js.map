{"version":3,"file":"Effect.js","sourceRoot":"","sources":["../../src/effects/Effect.ts"],"names":[],"mappings":";;;AASA,SAAgB,QAAQ,CAAC,MAAc;IACrC,OAAO,MAAM,YAAY,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AACzD,CAAC;AAFD,4BAEC;AACD,SAAwB,iBAAiB,CAAC,IAAgB;IACxD,OAAO,UAAU,OAAY;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC3C,IAAM,MAAM,GAAG,EAAE,IAAI,MAAA,EAAE,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE,CAAA;QACtC,OAAO,MAAM,CAAA;IACf,CAAC,CAAA;AACH,CAAC;AALD,oCAKC","sourcesContent":["export type EffectType = 'spawn' | 'call' | 'take' | 'takeEvery' | 'put' | 'delay' | 'getContext' | 'setContext'\n\nexport interface Effect {\n  type: EffectType;\n  payload: any;\n  args?: any[];\n}\nexport type EffectConstructor = (payload: any, ...args: any[]) => Effect\n\nexport function isEffect(effect: Effect): boolean {\n  return effect instanceof Object && Boolean(effect.type)\n}\nexport default function effectConstructor(type: EffectType): EffectConstructor {\n  return function (payload: any, ...args: any[]): Effect {\n    const effect = { type, payload, args }\n    return effect\n  }\n}\n"]}