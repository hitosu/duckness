{"version":3,"sources":["../src/Reactor.js"],"names":["Reactor","runtime","isRunning","reactions","Set","subscriptions","Map","addReagents","addReactions","addRuntime","addSubscriptions","Object","defineProperty","value","reagent","reagentType","type","has","listeners","get","i","length","writable","enumerable","reactionGenerator","reaction","add","delete","forEach","takeEvery","listener","set","Error","stopTaking"],"mappings":"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","sourcesContent":["import runReaction from './runtime/runReaction'\nimport stopReaction from './runtime/stopReaction'\nimport Reaction from './Reaction'\n\nexport default function Reactor() {\n  const runtime = {\n    isRunning: false,\n    reactions: new Set(),\n    subscriptions: new Map()\n  }\n\n  const Reactor = {}\n  addReagents(Reactor, runtime)\n  addReactions(Reactor, runtime)\n  addRuntime(Reactor, runtime)\n  addSubscriptions(Reactor, runtime)\n\n  return Reactor\n}\n\nfunction addReagents(Reactor, runtime) {\n  function put(reagent) {\n    if (runtime.isRunning) {\n      const { type: reagentType } = reagent\n      if (runtime.subscriptions.has(reagentType)) {\n        const listeners = [...runtime.subscriptions.get(reagentType)]\n        for (let i = 0; i < listeners.length; i++) {\n          listeners[i](reagent)\n        }\n      }\n    }\n  }\n\n  Object.defineProperty(Reactor, 'put', { value: put, writable: false, enumerable: true })\n}\n\nfunction addReactions(Reactor, runtime) {\n  function addReaction(reactionGenerator) {\n    const reaction = Reaction(reactionGenerator)\n    runtime.reactions.add(reaction)\n    if (runtime.isRunning) {\n      runReaction(reaction, Reactor, void 0)\n    }\n    return () => {\n      if (reaction.isRunning) {\n        stopReaction(reaction)\n      }\n      runtime.reactions.delete(reaction)\n    }\n  }\n\n  Object.defineProperty(Reactor, 'addReaction', { value: addReaction, writable: false, enumerable: true })\n}\n\nfunction addRuntime(Reactor, runtime) {\n  function run() {\n    if (!runtime.isRunning) {\n      runtime.isRunning = true\n      const reactions = [...runtime.reactions]\n      for (let i = 0; i < reactions.length; i++) {\n        const reaction = reactions[i]\n        if (reaction.isRunning) {\n          stopReaction(reaction)\n        }\n        runReaction(reaction, Reactor, void 0)\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n\n  function stop() {\n    if (runtime.isRunning) {\n      runtime.isRunning = false\n      runtime.reactions.forEach(reaction => {\n        if (reaction.isRunning) {\n          stopReaction(reaction)\n        }\n      })\n      return true\n    } else {\n      return false\n    }\n  }\n\n  Object.defineProperty(Reactor, 'run', { value: run, writable: false, enumerable: true })\n  Object.defineProperty(Reactor, 'stop', { value: stop, writable: false, enumerable: true })\n  Object.defineProperty(Reactor, 'isRunning', {\n    get() {\n      return runtime.isRunning\n    },\n    enumerable: true\n  })\n}\n\nfunction addSubscriptions(Reactor, runtime) {\n  function takeEvery(reagentType, listener) {\n    if ('function' === typeof listener) {\n      if (!runtime.subscriptions.has(reagentType)) {\n        runtime.subscriptions.set(reagentType, new Set())\n      }\n      runtime.subscriptions.get(reagentType).add(listener)\n      return () => {\n        if (runtime.subscriptions.has(reagentType) && runtime.subscriptions.get(reagentType).has(listener)) {\n          runtime.subscriptions.get(reagentType).delete(listener)\n          return true\n        } else {\n          return false\n        }\n      }\n    } else {\n      throw new Error('Reactor.takeEvery: listener should be a Function')\n    }\n  }\n\n  function take(reagentType, listener) {\n    if ('function' === typeof listener) {\n      const stopTaking = takeEvery(reagentType, reagent => {\n        stopTaking()\n        listener(reagent)\n      })\n    } else {\n      throw new Error('Reactor.take: listener should be a Function')\n    }\n  }\n\n  Object.defineProperty(Reactor, 'takeEvery', { value: takeEvery, writable: false, enumerable: true })\n  Object.defineProperty(Reactor, 'take', { value: take, writable: false, enumerable: true })\n}\n"],"file":"Reactor.js"}