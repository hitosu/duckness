{"version":3,"file":"takeEvery.js","sourceRoot":"","sources":["../../../../src/runtimes/local/effects/takeEvery.ts"],"names":[],"mappings":";;;;;;;;;;;AAIA,sDAA8C;AAE9C,IAAM,eAAe,GAAqB,UAAU,MAAM,EAAE,MAAM,EAAE,cAAc;IAChF,IAAM,kBAAkB,GAAuB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IAChH,IAAM,QAAQ,GAAa,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACzC,IAAM,YAAY,GAAU,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAEhD,IAAM,YAAY,GAAsB,kBAAkB,CAAC,GAAG,CAAC,UAAA,WAAW;QACxE,OAAA,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,UAAA,OAAO;YAC3C,IAAA,yBAAa,EAAC,QAAQ,kCAAM,YAAY,UAAE,OAAO,WAAG,IAAI,EAAE,cAAc,CAAC,CAAA;QAC3E,CAAC,CAAC;IAFF,CAEE,CACH,CAAA;IAED,OAAO;QACL,MAAM;YACJ,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,CAAC,OAAO,CAAC,UAAA,WAAW,IAAI,OAAA,WAAW,EAAE,EAAb,CAAa,CAAC,CAAA;gBAClD,MAAM,EAAE,CAAA;gBACR,OAAO,IAAI,CAAA;aACZ;iBAAM;gBACL,OAAO,KAAK,CAAA;aACb;QACH,CAAC;KACF,CAAA;AACH,CAAC,CAAA;AAED,kBAAe,eAAe,CAAA","sourcesContent":["import type { EffectTaskWorker } from '../EffectTaskWorker'\nimport type { ReagentType } from '../../../Reagent'\nimport type { Reaction } from '../../ReactorRuntime'\n\nimport spawnReaction from '../ReactionRuntime'\n\nconst takeEveryEffect: EffectTaskWorker = function (onDone, effect, effectsRuntime) {\n  const reagentTypesToTake: Array<ReagentType> = Array.isArray(effect.payload) ? effect.payload : [effect.payload]\n  const reaction: Reaction = effect.args[0]\n  const reactionArgs: any[] = effect.args.slice(1)\n\n  const unsubscribes: Array<() => void> = reagentTypesToTake.map(reagentType =>\n    effectsRuntime.takeEvery(reagentType, reagent => {\n      spawnReaction(reaction, [...reactionArgs, reagent], null, effectsRuntime)\n    })\n  )\n\n  return {\n    cancel() {\n      if (unsubscribes.length) {\n        unsubscribes.forEach(unsubscribe => unsubscribe())\n        onDone()\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n}\n\nexport default takeEveryEffect\n"]}