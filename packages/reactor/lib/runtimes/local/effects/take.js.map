{"version":3,"file":"take.js","sourceRoot":"","sources":["../../../../src/runtimes/local/effects/take.ts"],"names":[],"mappings":";;AAIA,IAAM,UAAU,GAAqB,UAAU,MAAM,EAAE,MAAM,EAAE,cAAc;IAC3E,IAAM,kBAAkB,GAAuB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IAEhH,IAAM,YAAY,GAAiC,kBAAkB,CAAC,GAAG,CAAC,UAAA,WAAW;QACnF,OAAA,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,UAAA,OAAO;YAC3C,YAAY,CAAC,OAAO,CAAC,UAAA,WAAW,IAAI,OAAA,WAAW,EAAE,EAAb,CAAa,CAAC,CAAA;YAClD,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAA;YAC3C,MAAM,CAAC,OAAO,CAAC,CAAA;QACjB,CAAC,CAAC;IAJF,CAIE,CACH,CAAA;IAED,OAAO;QACL,MAAM;YACJ,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,CAAC,OAAO,CAAC,UAAA,WAAW,IAAI,OAAA,WAAW,EAAE,EAAb,CAAa,CAAC,CAAA;gBAClD,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAA;gBAE3C,OAAO,IAAI,CAAA;aACZ;iBAAM;gBACL,OAAO,KAAK,CAAA;aACb;QACH,CAAC;KACF,CAAA;AACH,CAAC,CAAA;AAED,kBAAe,UAAU,CAAA","sourcesContent":["import type { EffectTaskWorker } from '../EffectTaskWorker'\nimport type { ReagentType } from '../../../Reagent'\nimport type { CancelReagentListener } from '../../ReactorRuntime'\n\nconst takeEffect: EffectTaskWorker = function (onDone, effect, effectsRuntime) {\n  const reagentTypesToTake: Array<ReagentType> = Array.isArray(effect.payload) ? effect.payload : [effect.payload]\n\n  const unsubscribes: Array<CancelReagentListener> = reagentTypesToTake.map(reagentType =>\n    effectsRuntime.takeEvery(reagentType, reagent => {\n      unsubscribes.forEach(unsubscribe => unsubscribe())\n      unsubscribes.splice(0, unsubscribes.length)\n      onDone(reagent)\n    })\n  )\n\n  return {\n    cancel() {\n      if (unsubscribes.length) {\n        unsubscribes.forEach(unsubscribe => unsubscribe())\n        unsubscribes.splice(0, unsubscribes.length)\n        // TODO: reject\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n}\n\nexport default takeEffect\n"]}