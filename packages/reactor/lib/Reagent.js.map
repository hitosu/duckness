{"version":3,"file":"Reagent.js","sourceRoot":"","sources":["../src/Reagent.ts"],"names":[],"mappings":";;AAaA,SAAwB,OAAO,CAC7B,IAAiB,EACjB,cAAqC,EACrC,kBAAsC;IAEtC,IAAM,kBAAkB,GAA4C,SAAS,kBAAkB,CAAC,OAAY;QAC1G,IAAM,OAAO,GAAY;YACvB,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;SAC5D,CAAA;QACD,OAAO,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA;IACnE,CAAC,CAAA;IACD,MAAM,CAAC,cAAc,CAAC,kBAAkB,EAAE,aAAa,EAAE;QACvD,GAAG;YACD,OAAO,IAAI,CAAA;QACb,CAAC;QACD,UAAU,EAAE,IAAI;KACjB,CAAC,CAAA;IACF,OAAO,kBAAkB,CAAA;AAC3B,CAAC;AAnBD,0BAmBC","sourcesContent":["export type ReagentType = string | symbol\nexport interface Reagent {\n  type: ReagentType;\n  payload: any;\n  [key: string]: any;\n}\nexport interface ReagentConstructor {\n  (payload: any): Reagent;\n  readonly reagentType: ReagentType;\n}\nexport type ReagentPayloadBuilder = (payload: any) => any\nexport type ReagentTransformer = (reagent: Reagent) => Reagent\n\nexport default function Reagent(\n  type: ReagentType,\n  payloadBuilder: ReagentPayloadBuilder,\n  reagentTransformer: ReagentTransformer\n): ReagentConstructor {\n  const reagentConstructor: ReagentConstructor = <ReagentConstructor> function reagentConstructor(payload: any) {\n    const reagent: Reagent = {\n      type: type,\n      payload: payloadBuilder ? payloadBuilder(payload) : payload\n    }\n    return reagentTransformer ? reagentTransformer(reagent) : reagent\n  }\n  Object.defineProperty(reagentConstructor, 'reagentType', {\n    get() {\n      return type\n    },\n    enumerable: true\n  })\n  return reagentConstructor\n}\n"]}