{"version":3,"sources":["../src/store.js"],"names":["selectAll","value","always","whenChanged","a","b","createStore","updateStore","updater","nextStore","refStore","current","listeners","forEach","listener","shouldSelect","nextValue","selector","shouldUpdate","prevValue","useStore","updateOnMount","updateOnUnmount","setValue","add","delete","initState","actions","Set","boundActions","Object","keys","actionName","args","store","apply","freeze","Consumer","props","children","subscribe","destroy","clear"],"mappings":"aAAA,4B,0zCAEO,QAASA,CAAAA,SAAT,CAAmBC,CAAnB,CAA0B,CAC/B,MAAOA,CAAAA,CACR,CAEM,QAASC,CAAAA,MAAT,EAAkB,CACvB,QACD,CAEM,QAASC,CAAAA,WAAT,CAAqBC,CAArB,CAAwBC,CAAxB,CAA2B,CAChC,MAAOD,CAAAA,CAAC,GAAKC,CACd,CAEc,QAASC,CAAAA,WAAT,EAA4D,CAOzE,QAASC,CAAAA,CAAT,CAAqBC,CAArB,CAA8B,CAC5B,GAAMC,CAAAA,CAAS,CAAGD,CAAO,CAACE,CAAQ,CAACC,OAAV,CAAzB,CAcA,MAbAC,CAAAA,CAAS,CAACC,OAAV,CAAkB,SAAUC,CAAV,CAAoB,CACpC,GAAI,CAAAA,CAAQ,CAACC,YAAT,EAA0BD,CAAQ,CAACC,YAAT,CAAsBN,CAAtB,CAAiCC,CAAQ,CAACC,OAA1C,CAA9B,EAGA,GAAMK,CAAAA,CAAS,CAAGF,CAAQ,CAACG,QAAT,CAAoBH,CAAQ,CAACG,QAAT,CAAkBR,CAAlB,CAApB,CAAmDA,CAArE,CAHA,CAII,MAAQK,CAAQ,CAACI,YAAjB,EAAiCJ,CAAQ,CAACI,YAAT,CAAsBF,CAAtB,CAAiCF,CAAQ,CAACK,SAA1C,CAJrC,IAKEL,CAAQ,CAACE,CAAD,CALV,CAMM,MAAQF,CAAQ,CAACI,YANvB,GAOIJ,CAAQ,CAACK,SAAT,CAAqBH,CAPzB,GAUD,CAXD,CAaA,CADAN,CAAQ,CAACC,OAAT,CAAmBF,CACnB,CAAOC,CAAQ,CAACC,OACjB,CAED,QAASS,CAAAA,CAAT,EAA+G,8DAAJ,EAAI,CAA3FC,CAA2F,GAA3FA,aAA2F,CAA5EC,CAA4E,GAA5EA,eAA4E,CAA3DL,CAA2D,GAA3DA,QAA2D,CAAjDF,CAAiD,GAAjDA,YAAiD,KAAnCG,YAAmC,CAAnCA,CAAmC,YAApBf,WAAoB,KACnF,oBAAS,UAAY,CAC7C,MAAOc,CAAAA,CAAQ,CAACI,CAAa,CAAGd,CAAW,CAACc,CAAD,CAAd,CAAgCX,CAAQ,CAACC,OAAvD,CAChB,CAFyB,CADmF,uBACtGV,CADsG,MAC/FsB,CAD+F,MAmB7G,MAdA,qBAAU,UAAY,CACpB,GAAMT,CAAAA,CAAQ,CAAG,SAAUE,CAAV,CAAqB,CACpCO,CAAQ,CAACP,CAAD,CACT,CAFD,CAOA,MAJAF,CAAAA,CAAQ,CAACG,QAAT,CAAoBA,CAIpB,CAHAH,CAAQ,CAACC,YAAT,CAAwBA,CAGxB,CAFAD,CAAQ,CAACI,YAAT,CAAwBA,CAExB,CADAN,CAAS,CAACY,GAAV,CAAcV,CAAd,CACA,CAAO,UAAY,CACbQ,CADa,EACIf,CAAW,CAACe,CAAD,CADf,CAEjBV,CAAS,CAACa,MAAV,CAAiBX,CAAjB,CACD,CACF,CAZD,CAYG,EAZH,CAcA,CAAOb,CACR,CA7CwE,6DAAJ,EAAI,KAArCyB,SAAqC,CAArCA,CAAqC,YAAzB,EAAyB,OAArBC,OAAqB,CAArBA,CAAqB,YAAX,EAAW,GACnEjB,CAAQ,CAAG,CACfC,OAAO,CAAEe,CADM,CADwD,CAKnEd,CAAS,CAAG,GAAIgB,CAAAA,GALmD,CA2DnEC,CAAY,CAAG,EA3DoD,CA+EzE,MAnBAC,CAAAA,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAqBd,OAArB,CAA6B,SAAUmB,CAAV,CAAsB,CACjDH,CAAY,CAACG,CAAD,CAAZ,CAA2B,UAAmB,4BAANC,CAAM,sBAANA,CAAM,iBAC5C1B,CAAW,CAAC,SAAU2B,CAAV,CAAiB,CAC3B,MAAOP,CAAAA,CAAO,CAACK,CAAD,CAAP,CAAoBG,KAApB,CAA0BD,CAA1B,CAAiCD,CAAjC,GAA0CC,CAClD,CAFU,CAGZ,CACF,CAND,CAmBA,CAAOJ,MAAM,CAACM,MAAP,CAAc,CACnBhB,QAAQ,CAARA,CADmB,CAEnBiB,QAAQ,CAlCV,SAAkBC,CAAlB,CAAyB,CACvB,GAAMrC,CAAAA,CAAK,CAAGmB,CAAQ,CAAC,CACrBC,aAAa,CAAEiB,CAAK,CAACjB,aADA,CAErBC,eAAe,CAAEgB,CAAK,CAAChB,eAFF,CAGrBL,QAAQ,CAAEqB,CAAK,CAACrB,QAHK,CAIrBF,YAAY,CAAEuB,CAAK,CAACvB,YAJC,CAKrBG,YAAY,CAAEoB,CAAK,CAACpB,YALC,CAAD,CAAtB,CAQA,MAAOoB,CAAAA,CAAK,CAACC,QAAN,CAAetC,CAAf,CACR,CAsBoB,CAGnB0B,OAAO,CAAEE,CAHU,CAInBtB,WAAW,CAAXA,CAJmB,CAKnBiC,SAAS,CAZX,SAAmB1B,CAAnB,CAA6B,CAE3B,MADAF,CAAAA,CAAS,CAACY,GAAV,CAAcV,CAAd,CACA,CAAO,UAAY,CACjBF,CAAS,CAACa,MAAV,CAAiBX,CAAjB,CACD,CACF,CAEoB,CAMnB2B,OAAO,CAjBT,UAAmB,CACjB7B,CAAS,CAAC8B,KAAV,EACD,CASoB,CAAd,CAQR","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport function selectAll(value) {\n  return value\n}\n\nexport function always() {\n  return true\n}\n\nexport function whenChanged(a, b) {\n  return a !== b\n}\n\nexport default function createStore({ initState = {}, actions = {} } = {}) {\n  const refStore = {\n    current: initState\n  }\n\n  const listeners = new Set() // eslint-disable-line immutablejs/no-native-map-set\n\n  function updateStore(updater) {\n    const nextStore = updater(refStore.current)\n    listeners.forEach(function (listener) {\n      if (listener.shouldSelect && !listener.shouldSelect(nextStore, refStore.current)) {\n        return\n      }\n      const nextValue = listener.selector ? listener.selector(nextStore) : nextStore\n      if (null == listener.shouldUpdate || listener.shouldUpdate(nextValue, listener.prevValue)) {\n        listener(nextValue)\n        if (null != listener.shouldUpdate) {\n          listener.prevValue = nextValue\n        }\n      }\n    })\n    refStore.current = nextStore\n    return refStore.current\n  }\n\n  function useStore({ updateOnMount, updateOnUnmount, selector, shouldSelect, shouldUpdate = whenChanged } = {}) {\n    const [value, setValue] = useState(function () {\n      return selector(updateOnMount ? updateStore(updateOnMount) : refStore.current)\n    })\n\n    useEffect(function () {\n      const listener = function (nextValue) {\n        setValue(nextValue)\n      }\n      listener.selector = selector\n      listener.shouldSelect = shouldSelect\n      listener.shouldUpdate = shouldUpdate\n      listeners.add(listener)\n      return function () {\n        if (updateOnUnmount) updateStore(updateOnUnmount)\n        listeners.delete(listener)\n      }\n    }, [])\n\n    return value\n  }\n\n  function Consumer(props) {\n    const value = useStore({\n      updateOnMount: props.updateOnMount,\n      updateOnUnmount: props.updateOnUnmount,\n      selector: props.selector,\n      shouldSelect: props.shouldSelect,\n      shouldUpdate: props.shouldUpdate\n    })\n\n    return props.children(value)\n  }\n\n  const boundActions = {}\n  Object.keys(actions).forEach(function (actionName) {\n    boundActions[actionName] = function (...args) {\n      updateStore(function (store) {\n        return actions[actionName].apply(store, args) || store\n      })\n    }\n  })\n\n  function destroy() {\n    listeners.clear()\n  }\n\n  function subscribe(listener) {\n    listeners.add(listener)\n    return function () {\n      listeners.delete(listener)\n    }\n  }\n\n  return Object.freeze({\n    useStore,\n    Consumer,\n    actions: boundActions,\n    updateStore,\n    subscribe,\n    destroy\n  })\n}\n"],"file":"store.js"}