{"version":3,"sources":["../src/store.js"],"names":["selectAll","value","always","whenChanged","a","b","createStore","updateStore","updater","nextStore","refStore","current","listeners","forEach","listener","shouldSelect","nextValue","selector","shouldUpdate","prevValue","useStore","updateOnMount","updateOnUnmount","debounce","setValue","debounceDuration","debounceTimer","clearTimeout","setTimeout","add","delete","initState","actions","Set","boundActions","Object","keys","actionName","args","store","apply","freeze","Consumer","props","children","getState","subscribe","destroy","clear"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from 'react'\n\nexport function selectAll(value) {\n  return value\n}\n\nexport function always() {\n  return true\n}\n\nexport function whenChanged(a, b) {\n  return a !== b\n}\n\nexport default function createStore({ initState = {}, actions = {} } = {}) {\n  const refStore = {\n    current: initState\n  }\n\n  const listeners = new Set()\n\n  function updateStore(updater) {\n    const nextStore = updater(refStore.current)\n    listeners.forEach(function (listener) {\n      if (listener.shouldSelect && !listener.shouldSelect(nextStore, refStore.current)) {\n        return\n      }\n      const nextValue = listener.selector ? listener.selector(nextStore) : nextStore\n      if (null == listener.shouldUpdate || listener.shouldUpdate(nextValue, listener.prevValue)) {\n        listener(nextValue)\n        if (null != listener.shouldUpdate) {\n          listener.prevValue = nextValue\n        }\n      }\n    })\n    refStore.current = nextStore\n    return refStore.current\n  }\n\n  function useStore({\n    updateOnMount,\n    updateOnUnmount,\n    selector,\n    shouldSelect,\n    shouldUpdate = whenChanged,\n    debounce\n  } = {}) {\n    const [value, setValue] = useState(function () {\n      return selector(updateOnMount ? updateStore(updateOnMount) : refStore.current)\n    })\n\n    const debounceDuration = useRef()\n    debounceDuration.current = debounce\n    const debounceTimer = useRef()\n\n    useEffect(function () {\n      const listener = function (nextValue) {\n        if (debounceTimer.current) {\n          clearTimeout(debounceTimer.current)\n        }\n        if (null == debounceDuration.current) {\n          setValue(nextValue)\n        } else {\n          debounceTimer.current = setTimeout(function () {\n            debounceTimer.current = null\n            setValue(nextValue)\n          }, debounceDuration.current)\n        }\n      }\n      listener.selector = selector\n      listener.shouldSelect = shouldSelect\n      listener.shouldUpdate = shouldUpdate\n      listeners.add(listener)\n      return function () {\n        if (updateOnUnmount) updateStore(updateOnUnmount)\n        listeners.delete(listener)\n      }\n    }, [])\n\n    return value\n  }\n\n  function Consumer(props) {\n    const value = useStore({\n      updateOnMount: props.updateOnMount,\n      updateOnUnmount: props.updateOnUnmount,\n      selector: props.selector,\n      shouldSelect: props.shouldSelect,\n      shouldUpdate: props.shouldUpdate,\n      debounce: props.debounce\n    })\n\n    return props.children(value)\n  }\n\n  const boundActions = {}\n  Object.keys(actions).forEach(function (actionName) {\n    boundActions[actionName] = function (...args) {\n      updateStore(function (store) {\n        return actions[actionName].apply(store, args) || store\n      })\n    }\n  })\n\n  function destroy() {\n    listeners.clear()\n  }\n\n  function subscribe(listener) {\n    listeners.add(listener)\n    return function () {\n      listeners.delete(listener)\n    }\n  }\n\n  function getState(selector) {\n    return selector ? selector(refStore.current) : refStore.current\n  }\n\n  return Object.freeze({\n    useStore,\n    Consumer,\n    actions: boundActions,\n    updateStore,\n    getState,\n    subscribe,\n    destroy\n  })\n}\n"],"file":"store.js"}