{"version":3,"file":"PoolSagaStream.js","sourceRoot":"","sources":["../src/PoolSagaStream.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA6C;AAC7C,8CAAqD;AAIrD,SAAwB,cAAc,CAAC,EAOjC;QAPiC,qBAOnC,EAAE,KAAA,EANJ,aAAa,mBAAA;IAOb,IAAM,cAAc,GAAG,IAAA,oBAAoB,GAAE,CAAA;IAE7C,IAAM,WAAW,GAA+B;IAEhD,CAAC,CAAA;IAED,IAAM,WAAW,GAA+B;QAC9C,OAAO,CAAC,cAAc,CAAC,CAAA;IACzB,CAAC,CAAA;IAED,IAAM,UAAU,GAA8B,UAAU,EAA8B;YAA5B,QAAQ,cAAA,EAAE,gBAAgB,sBAAA;QAClF,IAAM,QAAQ,GAAG,aAAa;YAC5B,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,QAAQ,UAAA,EAAE,gBAAgB,kBAAA,EAAE,CAAC;YACjE,CAAC,CAAC,SAAU,eAAe;;;;;4BACjB,KAAK,GAAY,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,IAAe;gCACpE,IAAI,IAAI,CAAC,QAAQ,EAAE;oCACjB,IAAI,gBAAgB,CAAC,OAAO,EAAE;wCAC5B,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAA;qCAChD;oCACD,KAAK,CAAC,IAAI,CACR,IAAA,eAAK,EAAC;;;;;yDACG,IAAI;;;;oDAEP,WAAM,IAAA,cAAI,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAA;;oDAAzB,SAAyB,CAAA;oDACzB,cAAK;;;oDAEL,IAAI,gBAAgB,CAAC,OAAO,EAAE;wDAC5B,gBAAgB,CAAC,OAAO,CACtB,OAAK,EACL,4BAA4B,EAC5B,MAAM,EACN,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,CACd,CAAA;qDACF;;;;;;qCAGN,CAAC,CACH,CAAA;iCACF;gCACD,OAAO,KAAK,CAAA;4BACd,CAAC,EAAE,EAAE,CAAC,CAAA;4BACN,WAAM,IAAA,aAAG,EAAC,KAAK,CAAC,EAAA;;4BAAhB,SAAgB,CAAA;;;;aACjB,CAAA;QAEL,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;IAC9B,CAAC,CAAA;IAED,IAAM,cAAc,GAAG,EAAE,CAAA;IAEzB,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE,aAAa,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;IAC/G,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE,aAAa,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;IAC/G,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;IAE7G,OAAO,cAAc,CAAA;AACvB,CAAC;AA/DD,iCA+DC","sourcesContent":["import createSagaMiddleware from 'redux-saga'\nimport { spawn, call, all } from 'redux-saga/effects'\nimport { IPoolStream, IDuck, TRefDucks, TRefErrorReporter } from '@duckness/pool'\nimport { ISagaDuck, TSaga } from '@duckness/saga'\n\nexport default function PoolSagaStream({\n  buildRootSaga\n}: {\n  buildRootSaga?: (\n    ducks: IDuck[],\n    { refDucks, refErrorReporter }: { refDucks: TRefDucks; refErrorReporter: TRefErrorReporter }\n  ) => TSaga\n} = {}) {\n  const sagaMiddleware = createSagaMiddleware()\n\n  const beforeBuild: IPoolStream['beforeBuild'] = function () {\n    // NOP\n  }\n\n  const middlewares: IPoolStream['middlewares'] = function () {\n    return [sagaMiddleware]\n  }\n\n  const afterBuild: IPoolStream['afterBuild'] = function ({ refDucks, refErrorReporter }) {\n    const rootSaga = buildRootSaga\n      ? buildRootSaga(refDucks.current, { refDucks, refErrorReporter })\n      : function* defaultRootSaga() {\n          const sagas: TSaga[] = refDucks.current.reduce((sagas, duck: ISagaDuck) => {\n            if (duck.rootSaga) {\n              if (refErrorReporter.current) {\n                duck.setErrorReporter(refErrorReporter.current)\n              }\n              sagas.push(\n                spawn(function* () {\n                  while (true) {\n                    try {\n                      yield call(duck.rootSaga)\n                      break\n                    } catch (error) {\n                      if (refErrorReporter.current) {\n                        refErrorReporter.current(\n                          error,\n                          '@duckness/pool-saga-stream',\n                          'saga',\n                          duck.poolName,\n                          duck.duckName\n                        )\n                      }\n                    }\n                  }\n                })\n              )\n            }\n            return sagas\n          }, [])\n          yield all(sagas)\n        }\n\n    sagaMiddleware.run(rootSaga)\n  }\n\n  const PoolSagaStream = {}\n\n  Object.defineProperty(PoolSagaStream, 'middlewares', { value: middlewares, writable: false, enumerable: true })\n  Object.defineProperty(PoolSagaStream, 'beforeBuild', { value: beforeBuild, writable: false, enumerable: true })\n  Object.defineProperty(PoolSagaStream, 'afterBuild', { value: afterBuild, writable: false, enumerable: true })\n\n  return PoolSagaStream\n}\n"]}