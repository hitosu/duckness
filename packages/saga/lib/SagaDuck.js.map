{"version":3,"sources":["../src/SagaDuck.js"],"names":["SagaDuck","duckName","appName","duckContext","reportError","refErrorReporter","current","rootSaga","sagas","duck","console","error","Object","defineProperty","value","saga","push","duckFace","poolName","writable","enumerable","reporter"],"mappings":"wQAGe,QAASA,CAAAA,QAAT,CAAkBC,CAAlB,CAA4BC,CAA5B,CAAqCC,CAArC,CAAkD,CAW/D,QAASC,CAAAA,CAAT,EAA8B,CACxB,YAAe,MAAOC,CAAAA,CAAgB,CAACC,OADf,EAE1BD,CAAgB,CAACC,OAAjB,OAAAD,CAAgB,WAEnB,CAkBD,QAAUE,CAAAA,CAAV,kFACE,gBAAM,iBAAIC,CAAJ,CAAN,CADF,uCAjC+D,8BAiCrDD,CAjCqD,EACzDE,CAAI,CAAG,kBAAKR,CAAL,CAAeC,CAAf,CAAwBC,CAAxB,CADkD,CAGzDE,CAAgB,CAAG,CACvBC,OAAO,CAAG,aAAgB,MAAOI,CAAAA,OAAvB,EAAkCA,OAAO,CAACC,KAA3C,EAAsD,UAAM,CAAE,CADhD,CAHsC,CAiBzDH,CAAK,CAAG,EAjBiD,CA0C/D,MALAI,CAAAA,MAAM,CAACC,cAAP,CAAsBJ,CAAtB,CAA4B,MAA5B,CAAoC,CAAEK,KAAK,CAnB3C,SAAiBC,CAAjB,CAAuB,CACrBP,CAAK,CAACQ,IAAN,CACE,2CAAM,4FAGA,yBAAM,kBAAKD,CAAL,CAAWN,CAAI,CAACQ,QAAhB,CAAN,CAHA,sEAMAb,CAAW,MAAQ,gBAAR,CAA0BK,CAAI,CAACS,QAA/B,CAAyCT,CAAI,CAACR,QAA9C,CANX,6EAAN,EADF,CAYD,CAMmC,CAAkBkB,QAAQ,GAA1B,CAAmCC,UAAU,GAA7C,CAApC,CAKA,CAJAR,MAAM,CAACC,cAAP,CAAsBJ,CAAtB,CAA4B,UAA5B,CAAwC,CAAEK,KAAK,CAAEP,CAAT,CAAmBY,QAAQ,GAA3B,CAAoCC,UAAU,GAA9C,CAAxC,CAIA,CAHAR,MAAM,CAACC,cAAP,CAAsBJ,CAAtB,CAA4B,kBAA5B,CAAgD,CAAEK,KAAK,CAhCvD,SAA0BO,CAA1B,CAAoC,CAClChB,CAAgB,CAACC,OAAjB,CAA2Be,CAC5B,CA8B+C,CAA2BF,QAAQ,GAAnC,CAA4CC,UAAU,GAAtD,CAAhD,CAGA,CAFAR,MAAM,CAACC,cAAP,CAAsBJ,CAAtB,CAA4B,aAA5B,CAA2C,CAAEK,KAAK,CAAEV,CAAT,CAAsBe,QAAQ,GAA9B,CAAuCC,UAAU,GAAjD,CAA3C,CAEA,CAAOX,CACR","sourcesContent":["import Duck from '@duckness/duck'\nimport { spawn, call, all } from 'redux-saga/effects'\n\nexport default function SagaDuck(duckName, appName, duckContext) {\n  const duck = Duck(duckName, appName, duckContext)\n\n  const refErrorReporter = {\n    current: ('undefined' !== typeof console && console.error) || (() => {}) // eslint-disable-line no-console\n  }\n\n  function setErrorReporter(reporter) {\n    refErrorReporter.current = reporter\n  }\n\n  function reportError(...args) {\n    if ('function' === typeof refErrorReporter.current) {\n      refErrorReporter.current(...args)\n    }\n  }\n\n  const sagas = []\n  function addSaga(saga) {\n    sagas.push(\n      spawn(function* () {\n        while (true) {\n          try {\n            yield call(saga, duck.duckFace)\n            break\n          } catch (error) {\n            reportError(error, '@duckness/saga', duck.poolName, duck.duckName)\n          }\n        }\n      })\n    )\n  }\n\n  function* rootSaga() {\n    yield all(sagas)\n  }\n\n  Object.defineProperty(duck, 'saga', { value: addSaga, writable: false, enumerable: true })\n  Object.defineProperty(duck, 'rootSaga', { value: rootSaga, writable: false, enumerable: true })\n  Object.defineProperty(duck, 'setErrorReporter', { value: setErrorReporter, writable: false, enumerable: true })\n  Object.defineProperty(duck, 'reportError', { value: reportError, writable: false, enumerable: true })\n\n  return duck\n}\n"],"file":"SagaDuck.js"}