{"version":3,"sources":["../src/useRedux.js"],"names":["useRedux","store","selector","shouldUpdate","shouldSelect","selectedState","getState","setSelectedState","customShouldSelect","customShouldUpdate","refPrevStoreState","refPrevSelectedState","current","prevSelectedStateUpdated","prevSelectedState","refSubscription","nextStoreState","nextSelectedState","unsubscribe","subscribe","useDispatchAction","actionCreator","payloadTransformer","payload","dispatch","useDispatch","dispatcher","deps","args"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react'\n\n/*\n * shouldUpdate:\n *   true - always update\n *   function - update if true == shouldUpdate(nextSelectedState, prevSelectedState, ?storePrevSelectedState(prevSelectedState))\n *   (default) - update if nextSelectedState !== prevSelectedState\n *\n * shouldSelect:\n *   function - select if true == shouldSelect(nextStoreState, prevStoreState)\n *   (default) - always select\n */\n\nexport default function useRedux(store, selector, shouldUpdate, shouldSelect) {\n  const [{ selectedState }, setSelectedState] = useState(() => {\n    return { selectedState: selector(store.getState()) }\n  })\n\n  const customShouldSelect = 'function' === typeof shouldSelect\n  const customShouldUpdate = 'function' === typeof shouldUpdate\n\n  const refPrevStoreState = useRef(void 0)\n  const refPrevSelectedState = useRef(void 0)\n  useEffect(() => {\n    refPrevStoreState.current = customShouldSelect ? store.getState() : null\n    if (customShouldUpdate) {\n      let prevSelectedStateUpdated = false\n      shouldUpdate(selectedState, refPrevSelectedState.current, prevSelectedState => {\n        refPrevSelectedState.current = prevSelectedState\n        prevSelectedStateUpdated = true\n      })\n      if (!prevSelectedStateUpdated) {\n        refPrevSelectedState.current = selectedState\n      }\n    } else if (true !== shouldUpdate) {\n      refPrevSelectedState.current = selectedState\n    }\n  }, [store, selector, shouldUpdate, shouldSelect])\n\n  const refSubscription = useRef(null)\n  refSubscription.current = useCallback(\n    nextStoreState => {\n      if (!customShouldSelect || shouldSelect(nextStoreState, refPrevStoreState.current)) {\n        const nextSelectedState = selector(nextStoreState)\n        let prevSelectedStateUpdated = false\n        if (\n          true === shouldUpdate ||\n          (customShouldUpdate &&\n            shouldUpdate(nextSelectedState, refPrevSelectedState.current, prevSelectedState => {\n              refPrevSelectedState.current = prevSelectedState\n              prevSelectedStateUpdated = true\n            })) ||\n          (!customShouldUpdate && nextSelectedState !== refPrevSelectedState.current)\n        ) {\n          setSelectedState({ selectedState: nextSelectedState })\n          if (!prevSelectedStateUpdated && true !== shouldUpdate) {\n            refPrevSelectedState.current = nextSelectedState\n          }\n        }\n      }\n      if (customShouldSelect) {\n        refPrevStoreState.current = nextStoreState\n      }\n    },\n    [selector, shouldUpdate, shouldSelect]\n  )\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      refSubscription.current(store.getState())\n    })\n    return () => {\n      unsubscribe()\n    }\n  }, [store])\n\n  return selectedState\n}\n\nexport function useDispatchAction(store, actionCreator, payloadTransformer) {\n  return useCallback(\n    payload =>\n      void 0 === payloadTransformer\n        ? store.dispatch(actionCreator(payload))\n        : 'function' === typeof payloadTransformer\n        ? store.dispatch(actionCreator(payloadTransformer(payload)))\n        : store.dispatch(actionCreator(payloadTransformer)),\n    [store, actionCreator, payloadTransformer]\n  )\n}\n\nexport function useDispatch(store, dispatcher, deps = []) {\n  return useCallback((...args) => dispatcher(store.dispatch, ...args), [store, ...deps])\n}\n"],"file":"useRedux.js"}