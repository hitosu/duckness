{"version":3,"file":"useRedux.js","names":["UNSET_MARKER","useRedux","store","selector","shouldUpdate","shouldSelect","useState","selectedState","getState","setSelectedState","customShouldSelect","customShouldUpdate","refPrevStoreState","useRef","refPrevSelectedState","useEffect","current","prevSelectedStateUpdated","prevSelectedState","refSubscription","useCallback","nextStoreState","nextSelectedState","unsubscribe","subscribe","useDispatchAction","actionCreator","payloadTransformer","payload","dispatch","useDispatch","dispatcher","deps","args","combineSelectors","selectorsMap","selectedStatesEqual","selectorKeys","Object","keys","combinedSelectors","selectorKey","i","length","storePrevSelectedState","areEqual","connect","emptyObject","emptySelector","Component","mapToProps","ConnectedComponent","props","refProps","safeSelector","state","selected","connectedProps","displayName","name"],"sources":["../src/useRedux.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react'\n\nconst UNSET_MARKER = {}\n\n/*\n * shouldUpdate:\n *   true - always update\n *   function - update if true == shouldUpdate(nextSelectedState, prevSelectedState, ?storePrevSelectedState(prevSelectedState))\n *   (default) - update if nextSelectedState !== prevSelectedState\n *\n * shouldSelect:\n *   function - select if true == shouldSelect(nextStoreState, prevStoreState)\n *   (default) - always select\n */\n\nexport default function useRedux(store, selector, shouldUpdate, shouldSelect) {\n  const [{ selectedState }, setSelectedState] = useState(() => {\n    return { selectedState: selector(store.getState()) }\n  })\n\n  const customShouldSelect = 'function' === typeof shouldSelect\n  const customShouldUpdate = 'function' === typeof shouldUpdate\n\n  const refPrevStoreState = useRef(void 0)\n  const refPrevSelectedState = useRef(UNSET_MARKER)\n  useEffect(() => {\n    refPrevStoreState.current = customShouldSelect ? store.getState() : null\n    if (customShouldUpdate) {\n      let prevSelectedStateUpdated = false\n      shouldUpdate(\n        selectedState,\n        UNSET_MARKER === refPrevSelectedState.current ? selectedState : refPrevSelectedState.current,\n        prevSelectedState => {\n          refPrevSelectedState.current = prevSelectedState\n          prevSelectedStateUpdated = true\n        }\n      )\n      if (!prevSelectedStateUpdated) {\n        refPrevSelectedState.current = selectedState\n      }\n    } else if (true !== shouldUpdate) {\n      refPrevSelectedState.current = selectedState\n    }\n  }, [store, selector, shouldUpdate, shouldSelect])\n\n  const refSubscription = useRef(null)\n  refSubscription.current = useCallback(\n    nextStoreState => {\n      if (!customShouldSelect || shouldSelect(nextStoreState, refPrevStoreState.current)) {\n        const nextSelectedState = selector(nextStoreState)\n        let prevSelectedStateUpdated = false\n        if (\n          true === shouldUpdate ||\n          (customShouldUpdate &&\n            shouldUpdate(nextSelectedState, refPrevSelectedState.current, prevSelectedState => {\n              refPrevSelectedState.current = prevSelectedState\n              prevSelectedStateUpdated = true\n            })) ||\n          (!customShouldUpdate && nextSelectedState !== refPrevSelectedState.current)\n        ) {\n          setSelectedState({ selectedState: nextSelectedState })\n          if (!prevSelectedStateUpdated && true !== shouldUpdate) {\n            refPrevSelectedState.current = nextSelectedState\n          }\n        }\n      }\n      if (customShouldSelect) {\n        refPrevStoreState.current = nextStoreState\n      }\n    },\n    [selector, shouldUpdate, shouldSelect]\n  )\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      refSubscription.current(store.getState())\n    })\n    return () => {\n      unsubscribe()\n    }\n  }, [store])\n\n  return selectedState\n}\n\nexport function useDispatchAction(store, actionCreator, payloadTransformer) {\n  return useCallback(\n    payload =>\n      void 0 === payloadTransformer\n        ? store.dispatch(actionCreator(payload))\n        : 'function' === typeof payloadTransformer\n        ? store.dispatch(actionCreator(payloadTransformer(payload)))\n        : store.dispatch(actionCreator(payloadTransformer)),\n    [store, actionCreator, payloadTransformer]\n  )\n}\n\nexport function useDispatch(store, dispatcher, deps = []) {\n  return useCallback((...args) => dispatcher(store.dispatch, ...args), [store, ...deps])\n}\n\nexport function combineSelectors(selectorsMap, { selectedStatesEqual } = {}) {\n  const selectorKeys = Object.keys(selectorsMap)\n  const combinedSelectors = {\n    selector: (...state) => {\n      const selectedState = {}\n      for (let i = 0; i < selectorKeys.length; i++) {\n        const selectorKey = selectorKeys[i]\n        selectedState[selectorKey] = selectorsMap[selectorKey](...state)\n      }\n      return selectedState\n    },\n    shouldUpdate: selectedStatesEqual\n      ? (nextSelectedState, prevSelectedState, storePrevSelectedState) => {\n          for (let i = 0; i < selectorKeys.length; i++) {\n            const selectorKey = selectorKeys[i]\n            if (!selectedStatesEqual(selectorKey, nextSelectedState[selectorKey], prevSelectedState[selectorKey])) {\n              return true\n            }\n          }\n          if (storePrevSelectedState) {\n            storePrevSelectedState(prevSelectedState)\n          }\n          return false\n        }\n      : (nextSelectedState, prevSelectedState, storePrevSelectedState) => {\n          for (let i = 0; i < selectorKeys.length; i++) {\n            const selectorKey = selectorKeys[i]\n            if (nextSelectedState[selectorKey] !== prevSelectedState[selectorKey]) {\n              return true\n            }\n          }\n          if (storePrevSelectedState) {\n            storePrevSelectedState(prevSelectedState)\n          }\n          return false\n        },\n    areEqual: (nextSelectedState, prevSelectedState) =>\n      !combinedSelectors.shouldUpdate(nextSelectedState, prevSelectedState)\n  }\n  return combinedSelectors\n}\n\nexport function connect(store, selector, shouldUpdate, shouldSelect, dispatch = store.dispatch) {\n  const emptyObject = {}\n  const emptySelector = () => emptyObject\n\n  return function (Component, mapToProps) {\n    function ConnectedComponent(props) {\n      const refProps = useRef(props)\n      refProps.current = props\n      const safeSelector = useCallback(\n        selector ? state => selector(state, refProps.current) || emptyObject : emptySelector,\n        []\n      )\n      const selected = useRedux(store, safeSelector, shouldUpdate, shouldSelect)\n      const connectedProps = (mapToProps ? mapToProps(selected, props, dispatch) : selected) || emptyObject\n      return <Component {...props} {...connectedProps} />\n    }\n    ConnectedComponent.displayName = `connect(${Component.displayName || Component.name || 'Component'})`\n    return ConnectedComponent\n  }\n}\n"],"mappings":"aAAA,qDAAuE,8nGAEvE,GAAMA,aAAY,CAAG,CAAC,CAAC,CAaR,QAASC,SAAQ,CAACC,CAAK,CAAEC,CAAQ,CAAEC,CAAY,CAAEC,CAAY,CAAE,OAC9B,GAAAC,eAAQ,EAAC,UAAM,CAC3D,MAAO,CAAEC,aAAa,CAAEJ,CAAQ,CAACD,CAAK,CAACM,QAAQ,EAAE,CAAE,CACrD,CAAC,CAAC,uBAFOD,CAAa,MAAbA,aAAa,CAAIE,CAAgB,MAIpCC,CAAkB,CAAG,UAAU,EAAK,MAAOL,EAAY,CACvDM,CAAkB,CAAG,UAAU,EAAK,MAAOP,EAAY,CAEvDQ,CAAiB,CAAG,GAAAC,aAAM,EAAC,IAAK,EAAC,CAAC,CAClCC,CAAoB,CAAG,GAAAD,aAAM,EAACb,YAAY,CAAC,CACjD,GAAAe,gBAAS,EAAC,UAAM,CAEd,GADAH,CAAiB,CAACI,OAAO,CAAGN,CAAkB,CAAGR,CAAK,CAACM,QAAQ,EAAE,CAAG,IAAI,CACpEG,CAAkB,CAAE,CACtB,GAAIM,EAAwB,GAAQ,CACpCb,CAAY,CACVG,CAAa,CACbP,YAAY,GAAKc,CAAoB,CAACE,OAAO,CAAGT,CAAa,CAAGO,CAAoB,CAACE,OAAO,CAC5F,SAAAE,CAAiB,CAAI,CACnBJ,CAAoB,CAACE,OAAO,CAAGE,CAAiB,CAChDD,CAAwB,GAC1B,CAAC,CACF,CACIA,CAAwB,GAC3BH,CAAoB,CAACE,OAAO,CAAGT,CAAa,CAEhD,CAAC,IAAU,KAASH,CAAY,GAC9BU,CAAoB,CAACE,OAAO,CAAGT,CAAa,CAEhD,CAAC,CAAE,CAACL,CAAK,CAAEC,CAAQ,CAAEC,CAAY,CAAEC,CAAY,CAAC,CAAC,CAEjD,GAAMc,EAAe,CAAG,GAAAN,aAAM,EAAC,IAAI,CAAC,CAqCpC,MApCAM,EAAe,CAACH,OAAO,CAAG,GAAAI,kBAAW,EACnC,SAAAC,CAAc,CAAI,CAChB,GAAI,CAACX,CAAkB,EAAIL,CAAY,CAACgB,CAAc,CAAET,CAAiB,CAACI,OAAO,CAAC,CAAE,IAC5EM,EAAiB,CAAGnB,CAAQ,CAACkB,CAAc,CAAC,CAC9CJ,CAAwB,GAAQ,EAElC,KAASb,CAAY,EACpBO,CAAkB,EACjBP,CAAY,CAACkB,CAAiB,CAAER,CAAoB,CAACE,OAAO,CAAE,SAAAE,CAAiB,CAAI,CACjFJ,CAAoB,CAACE,OAAO,CAAGE,CAAiB,CAChDD,CAAwB,GAC1B,CAAC,CAAE,EACJ,CAACN,CAAkB,EAAIW,CAAiB,GAAKR,CAAoB,CAACE,OAAQ,IAE3EP,CAAgB,CAAC,CAAEF,aAAa,CAAEe,CAAkB,CAAC,CAAC,CAClD,CAACL,CAAwB,EAAI,KAASb,CAAY,GACpDU,CAAoB,CAACE,OAAO,CAAGM,CAAiB,EAGtD,CACIZ,CAAkB,GACpBE,CAAiB,CAACI,OAAO,CAAGK,CAAc,CAE9C,CAAC,CACD,CAAClB,CAAQ,CAAEC,CAAY,CAAEC,CAAY,CAAC,CACvC,CAED,GAAAU,gBAAS,EAAC,UAAM,CACd,GAAMQ,EAAW,CAAGrB,CAAK,CAACsB,SAAS,CAAC,UAAM,CACxCL,CAAe,CAACH,OAAO,CAACd,CAAK,CAACM,QAAQ,EAAE,CAC1C,CAAC,CAAC,CACF,MAAO,WAAM,CACXe,CAAW,EACb,CACF,CAAC,CAAE,CAACrB,CAAK,CAAC,CAAC,CAEJK,CACT,CAEO,QAASkB,kBAAiB,CAACvB,CAAK,CAAEwB,CAAa,CAAEC,CAAkB,CAAE,CAC1E,MAAO,GAAAP,kBAAW,EAChB,SAAAQ,CAAO,QACL,KAAK,EAAC,GAAKD,CAAkB,CACzBzB,CAAK,CAAC2B,QAAQ,CAACH,CAAa,CAACE,CAAO,CAAC,CAAC,CACtC,UAAU,EAAK,MAAOD,EAAkB,CACxCzB,CAAK,CAAC2B,QAAQ,CAACH,CAAa,CAACC,CAAkB,CAACC,CAAO,CAAC,CAAC,CAAC,CAC1D1B,CAAK,CAAC2B,QAAQ,CAACH,CAAa,CAACC,CAAkB,CAAC,CAAC,EACvD,CAACzB,CAAK,CAAEwB,CAAa,CAAEC,CAAkB,CAAC,CAE9C,CAEO,QAASG,YAAW,CAAC5B,CAAK,CAAE6B,CAAU,CAAa,IAAXC,EAAI,wDAAG,EAAE,CACtD,MAAO,GAAAZ,kBAAW,EAAC,sCAAIa,CAAI,sBAAJA,CAAI,uBAAKF,EAAU,eAAC7B,CAAK,CAAC2B,QAAQ,SAAKI,CAAI,EAAC,GAAG/B,CAAK,4BAAK8B,CAAI,GACtF,CAEO,QAASE,iBAAgB,CAACC,CAAY,CAAgC,8DAAJ,CAAC,CAAC,CAA1BC,CAAmB,GAAnBA,mBAAmB,CAC5DC,CAAY,CAAGC,MAAM,CAACC,IAAI,CAACJ,CAAY,CAAC,CACxCK,CAAiB,CAAG,CACxBrC,QAAQ,CAAE,mBAAc,CAEtB,OACQsC,EAAW,CAFblC,CAAa,CAAG,CAAC,CAAC,CACfmC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,CAAY,CAACM,MAAM,CAAED,CAAC,EAAE,CACpCD,CAAW,CAAGJ,CAAY,CAACK,CAAC,CAAC,CACnCnC,CAAa,CAACkC,CAAW,CAAC,CAAGN,CAAY,CAACM,CAAW,CAAC,OAAzBN,CAAY,WAAuB,CAElE,MAAO5B,EACT,CAAC,CACDH,YAAY,CAAEgC,CAAmB,CAC7B,SAACd,CAAiB,CAAEJ,CAAiB,CAAE0B,CAAsB,CAAK,CAChE,IAAK,GACGH,EAAW,CADVC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,CAAY,CAACM,MAAM,CAAED,CAAC,EAAE,CAE1C,GADMD,CAAW,CAAGJ,CAAY,CAACK,CAAC,CAAC,CAC/B,CAACN,CAAmB,CAACK,CAAW,CAAEnB,CAAiB,CAACmB,CAAW,CAAC,CAAEvB,CAAiB,CAACuB,CAAW,CAAC,CAAC,CACnG,SAMJ,MAHIG,EAAsB,EACxBA,CAAsB,CAAC1B,CAAiB,CAAC,GAG7C,CAAC,CACD,SAACI,CAAiB,CAAEJ,CAAiB,CAAE0B,CAAsB,CAAK,CAChE,IAAK,GACGH,EAAW,CADVC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,CAAY,CAACM,MAAM,CAAED,CAAC,EAAE,CAE1C,GADMD,CAAW,CAAGJ,CAAY,CAACK,CAAC,CAAC,CAC/BpB,CAAiB,CAACmB,CAAW,CAAC,GAAKvB,CAAiB,CAACuB,CAAW,CAAC,CACnE,SAMJ,MAHIG,EAAsB,EACxBA,CAAsB,CAAC1B,CAAiB,CAAC,GAG7C,CAAC,CACL2B,QAAQ,CAAE,kBAACvB,CAAiB,CAAEJ,CAAiB,QAC7C,CAACsB,CAAiB,CAACpC,YAAY,CAACkB,CAAiB,CAAEJ,CAAiB,CAAC,CACzE,CAAC,CACD,MAAOsB,EACT,CAEO,QAASM,QAAO,CAAC5C,CAAK,CAAEC,CAAQ,CAAEC,CAAY,CAAEC,CAAY,CAA6B,IAA3BwB,EAAQ,wDAAG3B,CAAK,CAAC2B,QAAQ,CACtFkB,CAAW,CAAG,CAAC,CAAC,CAChBC,CAAa,CAAG,iBAAMD,EAAW,EAEvC,MAAO,UAAUE,CAAS,CAAEC,CAAU,CAAE,CACtC,QAASC,EAAkB,CAACC,CAAK,CAAE,CACjC,GAAMC,EAAQ,CAAG,GAAAxC,aAAM,EAACuC,CAAK,CAAC,CAC9BC,CAAQ,CAACrC,OAAO,CAAGoC,CAAK,IAClBE,EAAY,CAAG,GAAAlC,kBAAW,EAC9BjB,CAAQ,CAAG,SAAAoD,CAAK,QAAIpD,EAAQ,CAACoD,CAAK,CAAEF,CAAQ,CAACrC,OAAO,CAAC,EAAI+B,CAAW,EAAGC,CAAa,CACpF,EAAE,CACH,CACKQ,CAAQ,CAAGvD,QAAQ,CAACC,CAAK,CAAEoD,CAAY,CAAElD,CAAY,CAAEC,CAAY,CAAC,CACpEoD,CAAc,CAAG,CAACP,CAAU,CAAGA,CAAU,CAACM,CAAQ,CAAEJ,CAAK,CAAEvB,CAAQ,CAAC,CAAG2B,CAAQ,GAAKT,CAAW,CACrG,MAAO,8BAAC,CAAS,aAAKK,CAAK,CAAMK,CAAc,EACjD,CAEA,MADAN,EAAkB,CAACO,WAAW,mBAAcT,CAAS,CAACS,WAAW,EAAIT,CAAS,CAACU,IAAI,EAAI,WAAW,KAAG,CAC9FR,CACT,CACF"}