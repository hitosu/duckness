{"version":3,"sources":["../src/useRedux.js"],"names":["useRedux","store","selector","shouldUpdate","shouldSelect","getState","selectedState","setSelectedState","refPrevStoreState","current","refPrevSelectedState","refSubscription","nextStoreState","nextSelectedState","unsubscribe","subscribe","useDispatchAction","actionCreator","payloadTransformer","payload","dispatch","useDispatch","dispatcher","deps","args"],"mappings":"aAAA,4B,+yDAce,QAASA,CAAAA,QAAT,CAAkBC,CAAlB,CAAyBC,CAAzB,CAAmCC,CAAnC,CAAiDC,CAAjD,CAA+D,OAClC,oBAAS,iBAAMF,CAAAA,CAAQ,CAACD,CAAK,CAACI,QAAN,EAAD,CAAd,CAAT,CADkC,uBACrEC,CADqE,MACtDC,CADsD,MAGtEC,CAAiB,CAAG,kBAAO,IAAP,CAHkD,CAI5EA,CAAiB,CAACC,OAAlB,CAA4B,mBAAQ,iBAAO,KAASL,CAAT,CAAwB,IAAxB,CAA+BH,CAAK,CAACI,QAAN,EAAtC,CAAR,CAAiE,CAACJ,CAAD,CAAQG,CAAR,CAAjE,CAJgD,CAM5E,GAAMM,CAAAA,CAAoB,CAAG,kBAAO,IAAP,CAA7B,CACI,KAASP,CAP+D,GAQ1EO,CAAoB,CAACD,OAArB,CAA+BH,CAR2C,EAW5E,GAAMK,CAAAA,CAAe,CAAG,kBAAO,IAAP,CAAxB,CAoCA,MAnCAA,CAAAA,CAAe,CAACF,OAAhB,CAA0B,uBACxB,SAAAG,CAAc,CAAI,CAChB,GACE,KAASR,CAAT,EACC,YAAe,MAAOA,CAAAA,CAAtB,EAAsCA,CAAY,CAACQ,CAAD,CAAiBJ,CAAiB,CAACC,OAAnC,CADnD,EAEAG,CAAc,GAAKJ,CAAiB,CAACC,OAHvC,CAIE,CACA,GAAMI,CAAAA,CAAiB,CAAGX,CAAQ,CAACU,CAAD,CAAlC,CADA,CAGE,KAAST,CAAT,EACC,YAAe,MAAOA,CAAAA,CAAtB,EAAsCA,CAAY,CAACU,CAAD,CAAoBH,CAAoB,CAACD,OAAzC,CADnD,EAEAI,CAAiB,GAAKH,CAAoB,CAACD,OAL7C,IAOEF,CAAgB,CAACM,CAAD,CAPlB,CAQM,KAASV,CARf,GASIO,CAAoB,CAACD,OAArB,CAA+BI,CATnC,EAYD,CACG,KAAST,CAlBG,GAmBdI,CAAiB,CAACC,OAAlB,CAA4BG,CAnBd,CAqBjB,CAtBuB,CAuBxB,CAACV,CAAD,CAAWC,CAAX,CAAyBC,CAAzB,CAvBwB,CAmC1B,CATA,qBAAU,UAAM,CACd,GAAMU,CAAAA,CAAW,CAAGb,CAAK,CAACc,SAAN,CAAgB,UAAM,CACxCJ,CAAe,CAACF,OAAhB,CAAwBR,CAAK,CAACI,QAAN,EAAxB,CACD,CAFmB,CAApB,CAGA,MAAO,WAAM,CACXS,CAAW,EACZ,CACF,CAPD,CAOG,CAACb,CAAD,CAPH,CASA,CAAOK,CACR,CAEM,QAASU,CAAAA,iBAAT,CAA2Bf,CAA3B,CAAkCgB,CAAlC,CAAiDC,CAAjD,CAAqE,CAC1E,MAAO,uBACL,SAAAC,CAAO,QACL,KAAK,EAAL,GAAWD,CAAX,CACIjB,CAAK,CAACmB,QAAN,CAAeH,CAAa,CAACE,CAAD,CAA5B,CADJ,CAEI,YAAe,MAAOD,CAAAA,CAAtB,CACAjB,CAAK,CAACmB,QAAN,CAAeH,CAAa,CAACC,CAAkB,CAACC,CAAD,CAAnB,CAA5B,CADA,CAEAlB,CAAK,CAACmB,QAAN,CAAeH,CAAa,CAACC,CAAD,CAA5B,CALC,CADF,CAOL,CAACjB,CAAD,CAAQgB,CAAR,CAAuBC,CAAvB,CAPK,CASR,CAEM,QAASG,CAAAA,WAAT,CAAqBpB,CAArB,CAA4BqB,CAA5B,CAAmD,IAAXC,CAAAA,CAAW,wDAAJ,EAAI,CACxD,MAAO,uBAAY,sCAAIC,CAAJ,sBAAIA,CAAJ,uBAAaF,CAAAA,CAAU,MAAV,SAAWrB,CAAK,CAACmB,QAAjB,SAA8BI,CAA9B,EAAb,CAAZ,EAA+DvB,CAA/D,4BAAyEsB,CAAzE,GACR","sourcesContent":["import { useState, useEffect, useMemo, useCallback, useRef } from 'react'\n\n/*\n * shouldUpdate:\n *   true - always update\n *   function - shouldUpdate(nextSelectedState, prevSelectedState)\n *   (default) - update if nextSelectedState !== prevSelectedState\n *\n * shouldSelect:\n *   true - always update\n *   function - shouldSelect(nextStoreState, prevStoreState)\n *   (default) - update if nextStoreState !== prevStoreState\n */\n\nexport default function useRedux(store, selector, shouldUpdate, shouldSelect) {\n  const [selectedState, setSelectedState] = useState(() => selector(store.getState()))\n\n  const refPrevStoreState = useRef(null)\n  refPrevStoreState.current = useMemo(() => (true === shouldSelect ? null : store.getState()), [store, shouldSelect])\n\n  const refPrevSelectedState = useRef(null)\n  if (true !== shouldUpdate) {\n    refPrevSelectedState.current = selectedState\n  }\n\n  const refSubscription = useRef(null)\n  refSubscription.current = useCallback(\n    nextStoreState => {\n      if (\n        true === shouldSelect ||\n        ('function' === typeof shouldSelect && shouldSelect(nextStoreState, refPrevStoreState.current)) ||\n        nextStoreState !== refPrevStoreState.current\n      ) {\n        const nextSelectedState = selector(nextStoreState)\n        if (\n          true === shouldUpdate ||\n          ('function' === typeof shouldUpdate && shouldUpdate(nextSelectedState, refPrevSelectedState.current)) ||\n          nextSelectedState !== refPrevSelectedState.current\n        ) {\n          setSelectedState(nextSelectedState)\n          if (true !== shouldUpdate) {\n            refPrevSelectedState.current = nextSelectedState\n          }\n        }\n      }\n      if (true !== shouldSelect) {\n        refPrevStoreState.current = nextStoreState\n      }\n    },\n    [selector, shouldUpdate, shouldSelect]\n  )\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      refSubscription.current(store.getState())\n    })\n    return () => {\n      unsubscribe()\n    }\n  }, [store])\n\n  return selectedState\n}\n\nexport function useDispatchAction(store, actionCreator, payloadTransformer) {\n  return useCallback(\n    payload =>\n      void 0 === payloadTransformer\n        ? store.dispatch(actionCreator(payload))\n        : 'function' === typeof payloadTransformer\n        ? store.dispatch(actionCreator(payloadTransformer(payload)))\n        : store.dispatch(actionCreator(payloadTransformer)),\n    [store, actionCreator, payloadTransformer]\n  )\n}\n\nexport function useDispatch(store, dispatcher, deps = []) {\n  return useCallback((...args) => dispatcher(store.dispatch, ...args), [store, ...deps])\n}\n"],"file":"useRedux.js"}