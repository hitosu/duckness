{"version":3,"sources":["../src/Pool.js"],"names":["Pool","ducks","initDucks","buildStore","buildRootReducer","buildRootSaga","renderRoot","pool","props","addDuck","duck","push","errorReporter","console","error","setErrorReporter","reporter","build","redux","rootReducer","defaultRootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","reduxSaga","sagaMiddleware","store","rootSaga","defaultRootSaga","run","render","start","toElement","dom","mount","stop","unmount","state","action","reduce","duckName","sagas","mountedTo","ReactDOM","unmountComponentAtNode"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { spawn, call, all } from 'redux-saga/effects'\n\nexport default function Pool({\n  ducks: initDucks = [],\n  buildStore = _props => {\n    return {}\n  },\n  buildRootReducer,\n  buildRootSaga,\n  renderRoot = _props => null\n} = {}) {\n  const pool = {\n    props: {},\n    ducks: initDucks || [],\n    addDuck(duck) {\n      pool.ducks.push(duck)\n    },\n    errorReporter: console.error,\n    setErrorReporter(reporter) {\n      pool.errorReporter = reporter\n    },\n    build(props = pool.props) {\n      pool.props = props || {}\n      redux.rootReducer = buildRootReducer ? buildRootReducer(pool.ducks) : redux.defaultRootReducer\n      const composeEnhancers =\n        typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n          ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n          : compose\n      const enhancer = composeEnhancers(applyMiddleware(reduxSaga.sagaMiddleware))\n      redux.store = createStore(redux.rootReducer, buildStore ? buildStore(pool.props) || {} : {}, enhancer)\n      reduxSaga.rootSaga = buildRootSaga ? buildRootSaga(pool.ducks) : reduxSaga.defaultRootSaga\n      reduxSaga.sagaMiddleware.run(reduxSaga.rootSaga)\n    },\n    render(props = pool.props) {\n      pool.props = props || {}\n      if (null == redux.store) pool.build(pool.props)\n      return <Provider store={redux.store}>{renderRoot(pool.props)}</Provider>\n    },\n    start(props = pool.props, toElement) {\n      pool.build(props)\n      dom.mount(toElement)\n    },\n    stop() {\n      dom.unmount()\n      redux.store = null\n    }\n  }\n\n  const redux = {\n    store: null,\n    defaultRootReducer(state, action) {\n      return pool.ducks.reduce((state, duck) => {\n        try {\n          return duck(state, action)\n        } catch (error) {\n          if ('function' === typeof pool.errorReporter)\n            pool.errorReporter('@duckness/pool', duck.duckName, 'reducer', error)\n          return state\n        }\n      }, state)\n    }\n  }\n\n  const reduxSaga = {\n    sagaMiddleware: createSagaMiddleware(),\n    *defaultRootSaga() {\n      const sagas = pool.ducks.reduce((sagas, duck) => {\n        if (duck.rootSaga) {\n          duck.errorReporter(pool.errorReporter)\n          sagas.push(\n            spawn(function* () {\n              while (true) {\n                try {\n                  yield call(duck.rootSaga)\n                  break\n                } catch (error) {\n                  if ('function' === typeof pool.errorReporter)\n                    pool.errorReporter('@duckness/pool', duck.duckName, 'saga', error)\n                }\n              }\n            })\n          )\n        }\n        return sagas\n      }, [])\n      yield all(sagas)\n    }\n  }\n\n  const dom = {\n    mountedTo: null,\n    mount(toElement) {\n      if (toElement) {\n        if (null != dom.mountedTo && toElement !== dom.mountedTo) {\n          dom.unmount()\n        }\n        dom.mountedTo = toElement\n        ReactDOM.render(pool.render(), dom.mountedTo)\n      }\n    },\n    unmount() {\n      if (dom.mountedTo) {\n        ReactDOM.unmountComponentAtNode(dom.mountedTo)\n        dom.mountedTo = null\n      }\n    }\n  }\n\n  return {\n    addDuck: pool.addDuck,\n    start: pool.start,\n    stop: pool.stop,\n    build: pool.build,\n    render: pool.render,\n    mount: dom.mount,\n    unmount: dom.unmount,\n    errorReporter: pool.setErrorReporter\n  }\n}\n"],"file":"Pool.js"}