{"version":3,"sources":["../src/EpicDuck.js"],"names":["EpicDuck","duckName","appName","duckContext","reportError","refErrorReporter","current","duck","console","error","epics","Object","defineProperty","value","epic","push","args","duckFace","pipe","source","poolName","writable","enumerable","combineEpics","reporter"],"mappings":"mTAIe,QAASA,CAAAA,QAAT,CAAkBC,CAAlB,CAA4BC,CAA5B,CAAqCC,CAArC,CAAkD,CAW/D,QAASC,CAAAA,CAAT,EAA8B,CACxB,YAAe,MAAOC,CAAAA,CAAgB,CAACC,OADf,EAE1BD,CAAgB,CAACC,OAAjB,OAAAD,CAAgB,WAEnB,CAf8D,GACzDE,CAAAA,CAAI,CAAG,kBAAKN,CAAL,CAAeC,CAAf,CAAwBC,CAAxB,CADkD,CAGzDE,CAAgB,CAAG,CACvBC,OAAO,CAAG,aAAgB,MAAOE,CAAAA,OAAvB,EAAkCA,OAAO,CAACC,KAA3C,EAAsD,UAAM,CAAE,CADhD,CAHsC,CAiBzDC,CAAK,CAAG,EAjBiD,CA6C/D,MALAC,CAAAA,MAAM,CAACC,cAAP,CAAsBL,CAAtB,CAA4B,MAA5B,CAAoC,CAAEM,KAAK,CAtB3C,SAAiBC,CAAjB,CAAuB,CAErBJ,CAAK,CAACK,IAAN,CAAW,sCAAIC,CAAJ,sBAAIA,CAAJ,uBACTF,CAAAA,CAAI,MAAJ,QAAQE,CAAR,SAAcT,CAAI,CAACU,QAAnB,IAA6BC,IAA7B,CACE,0BAAa,SAACT,CAAD,CAAQU,CAAR,CAAmB,CAC9B,GAAI,CACFV,CAAK,CAACW,QAAN,CAAiBb,CAAI,CAACa,QADpB,CAEFX,CAAK,CAACR,QAAN,CAAiBM,CAAI,CAACN,QACvB,CAAC,QAAM,CAEP,CAED,MADAG,CAAAA,CAAW,CAACK,CAAD,CAAQ,gBAAR,CAA0BF,CAAI,CAACa,QAA/B,CAAyCb,CAAI,CAACN,QAA9C,CACX,CAAOkB,CACR,CATD,CADF,CADS,CAAX,CAcD,CAMmC,CAAkBE,QAAQ,GAA1B,CAAmCC,UAAU,GAA7C,CAApC,CAKA,CAJAX,MAAM,CAACC,cAAP,CAAsBL,CAAtB,CAA4B,UAA5B,CAAwC,CAAEM,KAAK,CAL/C,UAAoB,CAClB,MAAOU,4CAAgBb,CAAhB,CACR,CAGuC,CAAmBW,QAAQ,GAA3B,CAAoCC,UAAU,GAA9C,CAAxC,CAIA,CAHAX,MAAM,CAACC,cAAP,CAAsBL,CAAtB,CAA4B,kBAA5B,CAAgD,CAAEM,KAAK,CAnCvD,SAA0BW,CAA1B,CAAoC,CAClCnB,CAAgB,CAACC,OAAjB,CAA2BkB,CAC5B,CAiC+C,CAA2BH,QAAQ,GAAnC,CAA4CC,UAAU,GAAtD,CAAhD,CAGA,CAFAX,MAAM,CAACC,cAAP,CAAsBL,CAAtB,CAA4B,aAA5B,CAA2C,CAAEM,KAAK,CAAET,CAAT,CAAsBiB,QAAQ,GAA9B,CAAuCC,UAAU,GAAjD,CAA3C,CAEA,CAAOf,CACR","sourcesContent":["import Duck from '@duckness/duck'\nimport { combineEpics } from 'redux-observable'\nimport { catchError as rxCatchError } from 'rxjs/operators'\n\nexport default function EpicDuck(duckName, appName, duckContext) {\n  const duck = Duck(duckName, appName, duckContext)\n\n  const refErrorReporter = {\n    current: ('undefined' !== typeof console && console.error) || (() => {}) // eslint-disable-line no-console\n  }\n\n  function setErrorReporter(reporter) {\n    refErrorReporter.current = reporter\n  }\n\n  function reportError(...args) {\n    if ('function' === typeof refErrorReporter.current) {\n      refErrorReporter.current(...args)\n    }\n  }\n\n  const epics = []\n  function addEpic(epic) {\n    // add isolated epic\n    epics.push((...args) =>\n      epic(...args, duck.duckFace).pipe(\n        rxCatchError((error, source) => {\n          try {\n            error.poolName = duck.poolName\n            error.duckName = duck.duckName\n          } catch {\n            // skip\n          }\n          reportError(error, '@duckness/epic', duck.poolName, duck.duckName)\n          return source\n        })\n      )\n    )\n  }\n\n  function rootEpic() {\n    return combineEpics(...epics)\n  }\n\n  Object.defineProperty(duck, 'epic', { value: addEpic, writable: false, enumerable: true })\n  Object.defineProperty(duck, 'rootEpic', { value: rootEpic, writable: false, enumerable: true })\n  Object.defineProperty(duck, 'setErrorReporter', { value: setErrorReporter, writable: false, enumerable: true })\n  Object.defineProperty(duck, 'reportError', { value: reportError, writable: false, enumerable: true })\n\n  return duck\n}\n"],"file":"EpicDuck.js"}