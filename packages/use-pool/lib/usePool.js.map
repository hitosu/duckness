{"version":3,"file":"usePool.js","sourceRoot":"","sources":["../src/usePool.ts"],"names":[],"mappings":";;;AAAA,iDAW4B;AAgCnB,iGAvCP,4BAAgB,OAuCO;AA3BzB,SAAwB,OAAO,CAC7B,IAAW,EACX,QAAmB,EACnB,YAA2B,EAC3B,YAA2B;IAE3B,OAAO,IAAA,mBAAQ,EAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,YAAY,CAAC,CAAA;AACnE,CAAC;AAPD,0BAOC;AAED,SAAgB,iBAAiB,CAAC,IAAW,EAAE,aAA6B,EAAE,kBAAuC;IACnH,OAAO,IAAA,6BAAsB,EAAC,IAAI,CAAC,KAAK,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAA;AAC9E,CAAC;AAFD,8CAEC;AAED,SAAgB,WAAW,CAAC,IAAW,EAAE,UAAuB,EAAE,IAAgB;IAAhB,qBAAA,EAAA,SAAgB;IAChF,OAAO,IAAA,uBAAgB,EAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,CAAA;AACvD,CAAC;AAFD,kCAEC;AAED,SAAgB,OAAO,CACrB,IAAW,EACX,QAAmB,EACnB,YAA2B,EAC3B,YAA2B,EAC3B,QAAwB;IAAxB,yBAAA,EAAA,WAAW,IAAI,CAAC,QAAQ;IAExB,OAAO,IAAA,mBAAe,EAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAA;AACpF,CAAC;AARD,0BAQC","sourcesContent":["import useRedux, {\n  useDispatchAction as useReduxDispatchAction,\n  useDispatch as useReduxDispatch,\n  connect as useReduxConnect,\n  combineSelectors,\n  TShouldUpdate,\n  TShouldSelect,\n  ISelector,\n  TActionCreator,\n  TPayloadTransformer,\n  TDispatcher\n} from '@duckness/use-redux'\nimport { IPool } from '@duckness/pool'\n\nexport { TShouldUpdate, TShouldSelect, ISelector, TActionCreator, TPayloadTransformer, TDispatcher }\n\nexport default function usePool(\n  pool: IPool,\n  selector: ISelector,\n  shouldUpdate: TShouldUpdate,\n  shouldSelect: TShouldSelect\n) {\n  return useRedux(pool.store, selector, shouldUpdate, shouldSelect)\n}\n\nexport function useDispatchAction(pool: IPool, actionCreator: TActionCreator, payloadTransformer: TPayloadTransformer) {\n  return useReduxDispatchAction(pool.store, actionCreator, payloadTransformer)\n}\n\nexport function useDispatch(pool: IPool, dispatcher: TDispatcher, deps: any[] = []) {\n  return useReduxDispatch(pool.store, dispatcher, deps)\n}\n\nexport function connect(\n  pool: IPool,\n  selector: ISelector,\n  shouldUpdate: TShouldUpdate,\n  shouldSelect: TShouldSelect,\n  dispatch = pool.dispatch\n) {\n  return useReduxConnect(pool.store, selector, shouldUpdate, shouldSelect, dispatch)\n}\n\nexport { combineSelectors }\n"]}